//Pseudocode for the text editor
//Based on current code, as well as containing new pseudocode which will help me rewrite current code
//May have gaps or flaws, but I'll fix it when I get to it. One bite (byte?) at a time.

Save graph settings
Initialize Screen
Define pixel width string, usable tokens string, and main note string
Display text-editing window
Set up CNOTE list
  //CNOTE list stores string position values for each row, as well as pixel-width for the entire row
Define variables

REPEAT UNTIL [clear] pressed
  Display cursor
  Wait until a key is pressed,
    and otherwise start flashing the cursor if user is inactive
  
  IF key pressed is a graph button (Y= or Graph)
    Execute appropriate function (page up and page down, currently)
    Re-render text if page was scrolled
    Update cursor position and x value
  END IF
  
  IF [2nd] or [alpha] pressed
    change text entry mode
    //modes: Upper alpha, lower alpha, 2nd, and none/number-entry
  END IF
    
  IF an arrow key was pressed
    //I'm just going to simplify this and display the "action" cases, per se
    LEFT arrow pressed, cursor at left edge, on first row, and can scroll up
      scroll up 1 row
      re-render note
      put cursor at right of row
      update position
      update vertical alignment line
    LEFT arrow pressed, cursor at left edge, NOT on first row
      move cursor up
      put cursor at right of row
      update position
      update vertical alignment line
    LEFT arrow pressed, cursor NOT at left edge
      move cursor to the left, using pixel-width of previous character
      update position
      update vertical alignment line
    
    RIGHT arrow pressed, cursor at furthest right of row, on last row, and can scroll down
      scroll down 1 row
      re-render note
      put cursor at left edge
      update position
      update vertical alignment line
    RIGHT arrow pressed, cursor at furthest right of row, NOT on last row
      move cursor down
      put cursor at left edge
      update position
      update vertical alignment line
    RIGHT arrow pressed, cursor NOT at right of row
      move cursor to the right, using pixel-width of next character
      update position
      update vertical alignment line
      
    UP arrow pressed, on first row, and can scroll up
      scroll up 1 row
      re-render note
      update cursor x and position, centered on vertical alignment line
    UP arrow pressed, NOT on first row
      go up 1 row
      update cursor x and position, centered on vertical alignment line
    
    DOWN arrow pressed, on last row, and can scroll down
      scroll down 1 row
      re-render note
      update cursor x and position, centered on vertical alignment line
    DOWN arrow pressed, NOT on last row
      go down 1 row
      update cursor x and position, centered on vertical alignment line
  END IF
  
  IF [del] pressed and position is greater than 1
    IF cursor is NOT at left edge
      remove character behind cursor
      Move cursor back 1 character
      re-calculate row width, for each row, i.e. for word wrapping- if a word from the next line can be moved up to the current line
      re-render note, if necessary, otherwise just re-display row
    ELSE, cursor IS at left edge
      remove character on previous line
      Move cursor up to previous line
      re-calculate and re-render if necessary
    END IF
    Update CNOTE list, note string, and position value
    Update vertical alignment line
  END IF
  
  //This is messy and has some issues, especially for pseudocode...
  IF character entered (any button between [math] and [enter])
    IF button pressed is NOT [enter]
      convert keypress to character
      IF character entered is valid
        IF character is space
          store position of space in another variable
          store x value in another variable
          reset pixel width since last space character variable
        END IF
        store character width
        increment pixel width since last space character by character width
        add character to note string
        increment position
        
        IF enough room for character on current row
          store new position and width in CNOTE list
          Display the character
          Increase cursor X
        ELSE //not enough room
          IF not on last row
            IF pixel width since last space is less than max row width
              update CNOTE list with the position and x value of last space character
            END IF
            go down a row
            increment size of CNOTE list
            reset cursor x
            IF pixel width since last space is less than max row width, and character is NOT space
              clear last word
              redisplay last word on next line
              set new cursor x at end of word
            ELSE //character IS space, or pixel width since last space is greater than max row width
              display next character, without any word wrapping
              update cursor X
            END IF
            Update CNOTE list
          ELSE //On last row
            IF note continues on next line
              scroll down a row
              add character to beginning of next row
            ELSE
              increment size of CNOTE list
              scroll down a row
              add character to new row
            END IF
          END IF
        END IF
      END IF
    ELSE //character is [enter]
      add delimiter to string
      go down a row
      re-display rest of note, if necessary
      if on last row, scroll down
      increment position
      increment size of CNOTE list
      reset cursor x, and pixel width since last space
      Update CNOTE list
      store current position and x value as most recent space
    END IF
    Update vertical alignment line
  END IF

END REPEAT (main loop)

clear screen
restore previous graph settings
